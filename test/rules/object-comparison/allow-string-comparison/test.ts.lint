if (2) {}
if (2 > 1) {}
if (2 < 1) {}
if (2 >= 1) {}
if (2 <= 1) {}
if (2 == 1) {}
if (2 === 1) {}
if (2 != 1) {}
if (2 !== 1) {}
if (2 > undefined) {}
if (undefined === 1) {}
if (2 > undefined) {}
if (undefined === 1) {}
if (true) {}
if (true > false) {}
    ~~~~~~~~~~~~           [0]
if (true < false) {}
    ~~~~~~~~~~~~           [0]
if (true >= false) {}
    ~~~~~~~~~~~~~          [0]
if (true <= false) {}
    ~~~~~~~~~~~~~          [0]
if (true == false) {}
if (true === false) {}
if (true != false) {}
if (true !== false) {}
if ('') {}
if ('' > '') {}
if ('' < '') {}
if ('' >= '') {}
if ('' <= '') {}
if ('' == '') {}
if ('' === '') {}
if ('' != '') {}
if ('' !== '') {}
if ({}) {}
if ({} > {}) {}
    ~~~~~~~                [0]
if ({} < {}) {}
    ~~~~~~~                [0]
if ({} >= {}) {}
    ~~~~~~~~               [0]
if ({} <= {}) {}
    ~~~~~~~~               [0]
if ({} == {}) {}
    ~~~~~~~~               [0]
if ({} === {}) {}
    ~~~~~~~~~              [0]
if ({} != {}) {}
    ~~~~~~~~               [0]
if ({} !== {}) {}
    ~~~~~~~~~              [0]
if ([] === []) {}
    ~~~~~~~~~              [0]

if (3 > 2 || 2 > 1 && true === true) {}
if ('' > '' || 2 > 1 || {} > {}) {}
                        ~~~~~~~            [0]
if ('' > '' && 2 > 1 && {} > {}) {}
                        ~~~~~~~            [0]

if ({} === null) {}
if (null === {}) {}
if ({} === undefined) {}
if (undefined === {}) {}

function sameObject<T>(a: T, b: T): boolean {
    return a === b;
           ~~~~~~~                         [0]
}

function sameObject<T>(a: any, b: any): boolean {
    return a === b;
}

type myNumber = number;
const a1: myNumber = 1
const a2: myNumber = 2

if (a1 < a2) {}

type myString = string;
const b1: myString = ''
const b2: myString = ''

if (b1 === b2) {}

type myObject = Object;
const c1: myObject = {}
const c2: myObject = {}

if (c1 === c2) {}
    ~~~~~~~~~              [0]

const d1: any = 'string'
const d2: any = 2
if (d1 === d2) {}

enum Test {
    One = 1,
    Two = 2,
}

const e1: Test = Test.One

if (e1 === Test.Two) {}

[0]: Invalid comparison